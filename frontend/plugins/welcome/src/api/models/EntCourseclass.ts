/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCourseclassEdges,
    EntCourseclassEdgesFromJSON,
    EntCourseclassEdgesFromJSONTyped,
    EntCourseclassEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCourseclass
 */
export interface EntCourseclass {
    /**
     * Annotation holds the value of the "Annotation" field.
     * @type {string}
     * @memberof EntCourseclass
     */
    annotation?: string;
    /**
     * GroupClass holds the value of the "GroupClass" field.
     * @type {string}
     * @memberof EntCourseclass
     */
    groupClass?: string;
    /**
     * 
     * @type {EntCourseclassEdges}
     * @memberof EntCourseclass
     */
    edges?: EntCourseclassEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntCourseclass
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof EntCourseclass
     */
    instructorInfoId?: number;
    /**
     * Tablecode holds the value of the "tablecode" field.
     * @type {string}
     * @memberof EntCourseclass
     */
    tablecode?: string;
}

export function EntCourseclassFromJSON(json: any): EntCourseclass {
    return EntCourseclassFromJSONTyped(json, false);
}

export function EntCourseclassFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCourseclass {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'annotation': !exists(json, 'Annotation') ? undefined : json['Annotation'],
        'groupClass': !exists(json, 'GroupClass') ? undefined : json['GroupClass'],
        'edges': !exists(json, 'edges') ? undefined : EntCourseclassEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'instructorInfoId': !exists(json, 'instructorInfo_id') ? undefined : json['instructorInfo_id'],
        'tablecode': !exists(json, 'tablecode') ? undefined : json['tablecode'],
    };
}

export function EntCourseclassToJSON(value?: EntCourseclass | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Annotation': value.annotation,
        'GroupClass': value.groupClass,
        'edges': EntCourseclassEdgesToJSON(value.edges),
        'id': value.id,
        'instructorInfo_id': value.instructorInfoId,
        'tablecode': value.tablecode,
    };
}


