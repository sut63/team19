// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "course_name", Type: field.TypeString},
		{Name: "Degree_id", Type: field.TypeInt, Nullable: true},
		{Name: "department_id", Type: field.TypeInt, Nullable: true},
		{Name: "InstructorInfo_id", Type: field.TypeInt, Nullable: true},
		{Name: "Subject_id", Type: field.TypeInt, Nullable: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "courses_degrees_degree",
				Columns: []*schema.Column{CoursesColumns[2]},

				RefColumns: []*schema.Column{DegreesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "courses_departments_department",
				Columns: []*schema.Column{CoursesColumns[3]},

				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "courses_instructor_infos_instructor",
				Columns: []*schema.Column{CoursesColumns[4]},

				RefColumns: []*schema.Column{InstructorInfosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "courses_subjects_subject",
				Columns: []*schema.Column{CoursesColumns[5]},

				RefColumns: []*schema.Column{SubjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DegreesColumns holds the columns for the "degrees" table.
	DegreesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "degree_name", Type: field.TypeString, Unique: true},
	}
	// DegreesTable holds the schema information for the "degrees" table.
	DegreesTable = &schema.Table{
		Name:        "degrees",
		Columns:     DegreesColumns,
		PrimaryKey:  []*schema.Column{DegreesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "department", Type: field.TypeString, Unique: true},
		{Name: "faculty", Type: field.TypeString},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:        "departments",
		Columns:     DepartmentsColumns,
		PrimaryKey:  []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// InstructorInfosColumns holds the columns for the "instructor_infos" table.
	InstructorInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "phonenumber", Type: field.TypeInt, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "department_id", Type: field.TypeInt, Nullable: true},
		{Name: "instructorroom_id", Type: field.TypeInt, Nullable: true},
		{Name: "title_id", Type: field.TypeInt, Nullable: true},
	}
	// InstructorInfosTable holds the schema information for the "instructor_infos" table.
	InstructorInfosTable = &schema.Table{
		Name:       "instructor_infos",
		Columns:    InstructorInfosColumns,
		PrimaryKey: []*schema.Column{InstructorInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "instructor_infos_departments_instructorinfos",
				Columns: []*schema.Column{InstructorInfosColumns[5]},

				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "instructor_infos_instructor_rooms_instructorinfos",
				Columns: []*schema.Column{InstructorInfosColumns[6]},

				RefColumns: []*schema.Column{InstructorRoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "instructor_infos_titles_instructorinfos",
				Columns: []*schema.Column{InstructorInfosColumns[7]},

				RefColumns: []*schema.Column{TitlesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// InstructorRoomsColumns holds the columns for the "instructor_rooms" table.
	InstructorRoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room", Type: field.TypeString, Unique: true},
		{Name: "building", Type: field.TypeString},
	}
	// InstructorRoomsTable holds the schema information for the "instructor_rooms" table.
	InstructorRoomsTable = &schema.Table{
		Name:        "instructor_rooms",
		Columns:     InstructorRoomsColumns,
		PrimaryKey:  []*schema.Column{InstructorRoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SubjectsColumns holds the columns for the "subjects" table.
	SubjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "subject_name", Type: field.TypeString, Unique: true},
	}
	// SubjectsTable holds the schema information for the "subjects" table.
	SubjectsTable = &schema.Table{
		Name:        "subjects",
		Columns:     SubjectsColumns,
		PrimaryKey:  []*schema.Column{SubjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TitlesColumns holds the columns for the "titles" table.
	TitlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
	}
	// TitlesTable holds the schema information for the "titles" table.
	TitlesTable = &schema.Table{
		Name:        "titles",
		Columns:     TitlesColumns,
		PrimaryKey:  []*schema.Column{TitlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		DegreesTable,
		DepartmentsTable,
		InstructorInfosTable,
		InstructorRoomsTable,
		SubjectsTable,
		TitlesTable,
	}
)

func init() {
	CoursesTable.ForeignKeys[0].RefTable = DegreesTable
	CoursesTable.ForeignKeys[1].RefTable = DepartmentsTable
	CoursesTable.ForeignKeys[2].RefTable = InstructorInfosTable
	CoursesTable.ForeignKeys[3].RefTable = SubjectsTable
	InstructorInfosTable.ForeignKeys[0].RefTable = DepartmentsTable
	InstructorInfosTable.ForeignKeys[1].RefTable = InstructorRoomsTable
	InstructorInfosTable.ForeignKeys[2].RefTable = TitlesTable
}
