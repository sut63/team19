basePath: /api/v1
definitions:
  ent.Classdate:
    properties:
      DAY:
        description: DAY holds the value of the "DAY" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClassdateEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClassdateQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ClassdateEdges:
    properties:
      courseclasses:
        description: Courseclasses holds the value of the courseclasses edge.
        items:
          $ref: '#/definitions/ent.Courseclass'
        type: array
    type: object
  ent.Classroom:
    properties:
      ROOM:
        description: ROOM holds the value of the "ROOM" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClassroomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClassroomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ClassroomEdges:
    properties:
      courseclasses:
        description: Courseclasses holds the value of the courseclasses edge.
        items:
          $ref: '#/definitions/ent.Courseclass'
        type: array
    type: object
  ent.Classtime:
    properties:
      TIME:
        description: TIME holds the value of the "TIME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClasstimeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClasstimeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ClasstimeEdges:
    properties:
      courseclasses:
        description: Courseclasses holds the value of the courseclasses edge.
        items:
          $ref: '#/definitions/ent.Courseclass'
        type: array
    type: object
  ent.Course:
    properties:
      Course_name:
        description: CourseName holds the value of the "Course_name" field.
        type: string
      Course_year:
        description: CourseYear holds the value of the "Course_year" field.
        type: string
      Teacher_id:
        description: TeacherID holds the value of the "Teacher_id" field.
        type: string
      degree_id:
        type: integer
      edges:
        $ref: '#/definitions/ent.CourseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CourseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      subject_id:
        type: integer
    type: object
  ent.CourseEdges:
    properties:
      degreeID:
        $ref: '#/definitions/ent.Degree'
        description: DegreeID holds the value of the Degree_id edge.
        type: object
      departmentID:
        $ref: '#/definitions/ent.Department'
        description: DepartmentID holds the value of the Department_id edge.
        type: object
      subjectID:
        $ref: '#/definitions/ent.Subject'
        description: SubjectID holds the value of the Subject_id edge.
        type: object
    type: object
  ent.Courseclass:
    properties:
      edges:
        $ref: '#/definitions/ent.CourseclassEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CourseclassQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      instructorInfo_id:
        type: integer
      tablecode:
        description: Tablecode holds the value of the "tablecode" field.
        type: string
    type: object
  ent.CourseclassEdges:
    properties:
      classdate:
        $ref: '#/definitions/ent.Classdate'
        description: Classdate holds the value of the classdate edge.
        type: object
      classroom:
        $ref: '#/definitions/ent.Classroom'
        description: Classroom holds the value of the classroom edge.
        type: object
      classtime:
        $ref: '#/definitions/ent.Classtime'
        description: Classtime holds the value of the classtime edge.
        type: object
      instructorInfo:
        $ref: '#/definitions/ent.InstructorInfo'
        description: InstructorInfo holds the value of the instructorInfo edge.
        type: object
      subject:
        $ref: '#/definitions/ent.Subject'
        description: Subject holds the value of the subject edge.
        type: object
    type: object
  ent.Degree:
    properties:
      Degree_name:
        description: DegreeName holds the value of the "Degree_name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DegreeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DegreeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DegreeEdges:
    properties:
      degree:
        description: Degree holds the value of the degree edge.
        items:
          $ref: '#/definitions/ent.Course'
        type: array
      subjectsOffered:
        description: SubjectsOffered holds the value of the SubjectsOffered edge.
        items:
          $ref: '#/definitions/ent.SubjectsOffered'
        type: array
    type: object
  ent.Department:
    properties:
      DEPARTMENT:
        description: DEPARTMENT holds the value of the "DEPARTMENT" field.
        type: string
      FACULTY:
        description: FACULTY holds the value of the "FACULTY" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DepartmentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DepartmentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DepartmentEdges:
    properties:
      department:
        description: Department holds the value of the department edge.
        items:
          $ref: '#/definitions/ent.Course'
        type: array
      instructorinfos:
        description: Instructorinfos holds the value of the instructorinfos edge.
        items:
          $ref: '#/definitions/ent.InstructorInfo'
        type: array
    type: object
  ent.InstructorInfo:
    properties:
      EMAIL:
        description: EMAIL holds the value of the "EMAIL" field.
        type: string
      NAME:
        description: NAME holds the value of the "NAME" field.
        type: string
      PASSWORD:
        description: PASSWORD holds the value of the "PASSWORD" field.
        type: string
      PHONENUMBER:
        description: PHONENUMBER holds the value of the "PHONENUMBER" field.
        type: string
      edges:
        $ref: '#/definitions/ent.InstructorInfoEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the InstructorInfoQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.InstructorInfoEdges:
    properties:
      courseclasses:
        description: Courseclasses holds the value of the courseclasses edge.
        items:
          $ref: '#/definitions/ent.Courseclass'
        type: array
      department:
        $ref: '#/definitions/ent.Department'
        description: Department holds the value of the department edge.
        type: object
      instructorroom:
        $ref: '#/definitions/ent.InstructorRoom'
        description: Instructorroom holds the value of the instructorroom edge.
        type: object
      title:
        $ref: '#/definitions/ent.Title'
        description: Title holds the value of the title edge.
        type: object
    type: object
  ent.InstructorRoom:
    properties:
      BUILDING:
        description: BUILDING holds the value of the "BUILDING" field.
        type: string
      ROOM:
        description: ROOM holds the value of the "ROOM" field.
        type: string
      edges:
        $ref: '#/definitions/ent.InstructorRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the InstructorRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.InstructorRoomEdges:
    properties:
      instructorinfos:
        description: Instructorinfos holds the value of the instructorinfos edge.
        items:
          $ref: '#/definitions/ent.InstructorInfo'
        type: array
    type: object
  ent.Subject:
    properties:
      Subject_name:
        description: SubjectName holds the value of the "Subject_name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.SubjectEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SubjectQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.SubjectEdges:
    properties:
      courseclasses:
        description: Courseclasses holds the value of the courseclasses edge.
        items:
          $ref: '#/definitions/ent.Courseclass'
        type: array
      subject:
        description: Subject holds the value of the subject edge.
        items:
          $ref: '#/definitions/ent.Course'
        type: array
      subjectsOffered:
        description: SubjectsOffered holds the value of the SubjectsOffered edge.
        items:
          $ref: '#/definitions/ent.SubjectsOffered'
        type: array
    type: object
  ent.SubjectsOffered:
    properties:
      AMOUNT:
        description: AMOUNT holds the value of the "AMOUNT" field.
        type: string
      Remain:
        description: Remain holds the value of the "Remain" field.
        type: string
      STATUS:
        description: STATUS holds the value of the "STATUS" field.
        type: string
      degree_id:
        type: integer
      edges:
        $ref: '#/definitions/ent.SubjectsOfferedEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SubjectsOfferedQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      subject_id:
        type: integer
    type: object
  ent.SubjectsOfferedEdges:
    properties:
      degree:
        $ref: '#/definitions/ent.Degree'
        description: Degree holds the value of the Degree edge.
        type: object
      subject:
        $ref: '#/definitions/ent.Subject'
        description: Subject holds the value of the Subject edge.
        type: object
      term:
        $ref: '#/definitions/ent.Term'
        description: Term holds the value of the Term edge.
        type: object
      year:
        $ref: '#/definitions/ent.Year'
        description: Year holds the value of the Year edge.
        type: object
    type: object
  ent.Term:
    properties:
      TERM:
        description: TERM holds the value of the "TERM" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.TermEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TermQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.TermEdges:
    properties:
      subjectsOffered:
        description: SubjectsOffered holds the value of the SubjectsOffered edge.
        items:
          $ref: '#/definitions/ent.SubjectsOffered'
        type: array
    type: object
  ent.Title:
    properties:
      TITLE:
        description: TITLE holds the value of the "TITLE" field.
        type: string
      edges:
        $ref: '#/definitions/ent.TitleEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TitleQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.TitleEdges:
    properties:
      instructorinfos:
        description: Instructorinfos holds the value of the instructorinfos edge.
        items:
          $ref: '#/definitions/ent.InstructorInfo'
        type: array
    type: object
  ent.Year:
    properties:
      YEAR:
        description: YEAR holds the value of the "YEAR" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.YearEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the YearQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.YearEdges:
    properties:
      subjectsOffered:
        description: SubjectsOffered holds the value of the SubjectsOffered edge.
        items:
          $ref: '#/definitions/ent.SubjectsOffered'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /SubjectsOffereds:
    get:
      description: list SubjectsOffered entities
      operationId: list-SubjectsOffered
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.SubjectsOffered'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List SubjectsOffered entities
    post:
      consumes:
      - application/json
      description: Create SubjectsOffered
      operationId: create-SubjectsOffered
      parameters:
      - description: SubjectsOffered entity
        in: body
        name: subjectsoffered
        required: true
        schema:
          $ref: '#/definitions/ent.SubjectsOffered'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.SubjectsOffered'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create SubjectsOffered
  /SubjectsOffereds/{id}:
    delete:
      description: get SubjectsOffered by ID
      operationId: delete-SubjectsOffered
      parameters:
      - description: SubjectsOffered ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a SubjectsOffered entity by ID
    get:
      description: get SubjectsOffered by ID
      operationId: get-SubjectsOffered
      parameters:
      - description: SubjectsOffered ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.SubjectsOffered'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a SubjectsOffered entity by ID
    put:
      consumes:
      - application/json
      description: update SubjectsOffered by ID
      operationId: update-SubjectsOffered
      parameters:
      - description: SubjectsOffered ID
        in: path
        name: id
        required: true
        type: integer
      - description: SubjectsOffered entity
        in: body
        name: SubjectsOffered
        required: true
        schema:
          $ref: '#/definitions/ent.SubjectsOffered'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.SubjectsOffered'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a SubjectsOffered entity by ID
  /classdates:
    get:
      description: list classdate entities
      operationId: list-classdate
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Classdate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List classdate entities
    post:
      consumes:
      - application/json
      description: Create classdate
      operationId: create-classdate
      parameters:
      - description: Classdate entity
        in: body
        name: classdate
        required: true
        schema:
          $ref: '#/definitions/ent.Classdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classdate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create classdate
  /classdates/{id}:
    get:
      description: get classdate by ID
      operationId: get-classdate
      parameters:
      - description: Classdate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classdate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a classdate entity by ID
  /classrooms:
    get:
      description: list classroom entities
      operationId: list-classroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Classroom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List classroom entities
    post:
      consumes:
      - application/json
      description: Create classroom
      operationId: create-classroom
      parameters:
      - description: Classroom entity
        in: body
        name: classroom
        required: true
        schema:
          $ref: '#/definitions/ent.Classroom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create classroom
  /classrooms/{id}:
    get:
      description: get classroom by ID
      operationId: get-classroom
      parameters:
      - description: Classroom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classroom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a classroom entity by ID
  /classtimes:
    get:
      description: list classtime entities
      operationId: list-classtime
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Classtime'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List classtime entities
    post:
      consumes:
      - application/json
      description: Create classtime
      operationId: create-classtime
      parameters:
      - description: Classtime entity
        in: body
        name: classtime
        required: true
        schema:
          $ref: '#/definitions/ent.Classtime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classtime'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create classtime
  /classtimes/{id}:
    get:
      description: get classtime by ID
      operationId: get-classtime
      parameters:
      - description: Classtime ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Classtime'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a classtime entity by ID
  /courseclasss:
    get:
      description: list courseclass entities
      operationId: list-courseclass
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Courseclass'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List courseclass entities
    post:
      consumes:
      - application/json
      description: Create courseclass
      operationId: create-courseclass
      parameters:
      - description: Courseclass entity
        in: body
        name: courseclass
        required: true
        schema:
          $ref: '#/definitions/ent.Courseclass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Courseclass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create courseclass
  /courseclasss/{id}:
    delete:
      description: get courseclass by ID
      operationId: delete-courseclass
      parameters:
      - description: Courseclass ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a courseclass entity by ID
    get:
      description: get courseclass by ID
      operationId: get-courseclass
      parameters:
      - description: Courseclass ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Courseclass'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a courseclass entity by ID
    put:
      consumes:
      - application/json
      description: update courseclass by ID
      operationId: update-courseclass
      parameters:
      - description: Courseclass ID
        in: path
        name: id
        required: true
        type: integer
      - description: Courseclass entity
        in: body
        name: courseclass
        required: true
        schema:
          $ref: '#/definitions/ent.Courseclass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Courseclass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a courseclass entity by ID
  /courses:
    get:
      description: list course entities
      operationId: list-course
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Course'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List course entities
    post:
      consumes:
      - application/json
      description: Create course
      operationId: create-course
      parameters:
      - description: Course entity
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/ent.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create course
  /courses/{id}:
    delete:
      description: get course by ID
      operationId: delete-course
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a course entity by ID
    get:
      description: get course by ID
      operationId: get-course
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Course'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a course entity by ID
    put:
      consumes:
      - application/json
      description: update course by ID
      operationId: update-course
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      - description: Course entity
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/ent.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a course entity by ID
  /degrees:
    get:
      description: list degree entities
      operationId: list-degree
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Degree'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List degree entities
    post:
      consumes:
      - application/json
      description: Create degree
      operationId: create-degree
      parameters:
      - description: Degree entity
        in: body
        name: degree
        required: true
        schema:
          $ref: '#/definitions/ent.Degree'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Degree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create degree
  /degrees/{id}:
    get:
      description: get degree by ID
      operationId: get-degree
      parameters:
      - description: Degree ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Degree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a degree entity by ID
  /departments:
    get:
      description: list department entities
      operationId: list-department
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Department'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List department entities
    post:
      consumes:
      - application/json
      description: Create department
      operationId: create-department
      parameters:
      - description: Department entity
        in: body
        name: department
        required: true
        schema:
          $ref: '#/definitions/ent.Department'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create department
  /departments/{id}:
    get:
      description: get department by ID
      operationId: get-department
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a department entity by ID
  /instructorinfos:
    get:
      description: list instructorinfo entities
      operationId: list-instructorinfo
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.InstructorInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List instructorinfo entities
    post:
      consumes:
      - application/json
      description: Create instructorinfo
      operationId: create-instructorinfo
      parameters:
      - description: InstructorInfo entity
        in: body
        name: instructorinfo
        required: true
        schema:
          $ref: '#/definitions/ent.InstructorInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.InstructorInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create instructorinfo
  /instructorinfos/{id}:
    delete:
      description: get instructorinfo by ID
      operationId: delete-instructorinfo
      parameters:
      - description: InstructorInfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a instructorinfo entity by ID
    get:
      description: get instructorinfo by ID
      operationId: get-instructorinfo
      parameters:
      - description: InstructorInfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.InstructorInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a instructorinfo entity by ID
    put:
      consumes:
      - application/json
      description: update instructorinfo by ID
      operationId: update-instructorinfo
      parameters:
      - description: InstructorInfo ID
        in: path
        name: id
        required: true
        type: integer
      - description: InstructorInfo entity
        in: body
        name: instructorinfo
        required: true
        schema:
          $ref: '#/definitions/ent.InstructorInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.InstructorInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a instructorinfo entity by ID
  /instructorrooms:
    get:
      description: list instructorroom entities
      operationId: list-instructorroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.InstructorRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List instructorroom entities
    post:
      consumes:
      - application/json
      description: Create instructorroom
      operationId: create-instructorroom
      parameters:
      - description: InstructorRoom entity
        in: body
        name: instructorroom
        required: true
        schema:
          $ref: '#/definitions/ent.InstructorRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.InstructorRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create instructorroom
  /instructorrooms/{id}:
    get:
      description: get instructorroom by ID
      operationId: get-instructorroom
      parameters:
      - description: InstructorRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.InstructorRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a instructorroom entity by ID
  /subjects:
    get:
      description: list subject entities
      operationId: list-subject
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Subject'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List subject entities
    post:
      consumes:
      - application/json
      description: Create subject
      operationId: create-subject
      parameters:
      - description: Subject entity
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/ent.Subject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Subject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create subject
  /subjects/{id}:
    get:
      description: get subject by ID
      operationId: get-subject
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Subject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a subject entity by ID
  /terms:
    get:
      description: list term entities
      operationId: list-term
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Term'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List term entities
    post:
      consumes:
      - application/json
      description: Create term
      operationId: create-term
      parameters:
      - description: Term entity
        in: body
        name: term
        required: true
        schema:
          $ref: '#/definitions/ent.Term'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Term'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create term
  /terms/{id}:
    delete:
      description: get term by ID
      operationId: delete-term
      parameters:
      - description: Term ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a term entity by ID
    get:
      description: get term by ID
      operationId: get-term
      parameters:
      - description: Term ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Term'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a term entity by ID
    put:
      consumes:
      - application/json
      description: update term by ID
      operationId: update-term
      parameters:
      - description: Term ID
        in: path
        name: id
        required: true
        type: integer
      - description: Term entity
        in: body
        name: term
        required: true
        schema:
          $ref: '#/definitions/ent.Term'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Term'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a term entity by ID
  /titles:
    get:
      description: list title entities
      operationId: list-title
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Title'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List title entities
    post:
      consumes:
      - application/json
      description: Create title
      operationId: create-title
      parameters:
      - description: Title entity
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/ent.Title'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Title'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create title
  /titles/{id}:
    get:
      description: get title by ID
      operationId: get-title
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Title'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a title entity by ID
  /years:
    get:
      description: list year entities
      operationId: list-year
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Year'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List year entities
    post:
      consumes:
      - application/json
      description: Create year
      operationId: create-year
      parameters:
      - description: Year entity
        in: body
        name: year
        required: true
        schema:
          $ref: '#/definitions/ent.Year'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create year
  /years/{id}:
    delete:
      description: get year by ID
      operationId: delete-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a year entity by ID
    get:
      description: get year by ID
      operationId: get-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a year entity by ID
    put:
      consumes:
      - application/json
      description: update year by ID
      operationId: update-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year entity
        in: body
        name: year
        required: true
        schema:
          $ref: '#/definitions/ent.Year'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a year entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
